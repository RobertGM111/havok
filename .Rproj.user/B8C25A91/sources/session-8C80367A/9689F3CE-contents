library(R.matlab)
library(pracma)

setwd("~/Box Sync/MyProjects/ScrewingAround/DMDVisualizations/CylinderFluidAnimation")
dat <- readMat("/Users/robertmoulder/Downloads/DATA/FLUIDS/CYLINDER_ALL.mat")


dmd <- function(x, y = NULL, r, dt) {
  
  if (!is.null(y)) {
    X <- x
    Y <- y
  } else {
    X <- x[ , 1:(ncol(x) - 1)]
    Y <- x[ , 2:ncol(x)]
  }
  
  Xsvd <- svd(X)
  U <- Xsvd$u
  V <- Xsvd$v
  sig <- diag(Xsvd$d)
  
  Ur <- U[, 1:r]
  Vr <- V[, 1:r]
  sigr <- sig[1:r, 1:r]
  sigrInv <- solve(sigr)
  
  Atilde <- t(Ur) %*% Y %*% Vr %*% sigrInv
  eigenAtilde <- eigen(Atilde)
  
  lambda <- eigenAtilde$values
  lambdaMat <- matrix(0, nrow = r, ncol = r)
  diag(lambdaMat) <- lambda
  
  omega <- log(lambda) / dt
  omegaMat <- matrix(0, nrow = r, ncol = r)
  diag(omegaMat) <- omega
  
  Phi <- Y %*% Vr %*% sigrInv %*% eigenAtilde$vectors
  
  svdPhi <- svd(t(Phi) %*% Phi)
  
  isTol <- svdPhi$d > max(.Machine$double.eps^(2/3) * svdPhi$d[1], 0)
  
  if (all(isTol)) {
    
    invRes <- svdPhi$v %*% (1/svdPhi$d * t(svdPhi$u))
    
  } else if (any(isTol)) {
    
    invRes  <- svdPhi$v[, isTol, drop=FALSE] %*% (1/svdPhi$d[isTol] * t(svdPhi$u[, isTol, drop=FALSE]))
    
  } else {
    
    invRes  <- matrix(0, nrow=ncol(t(Phi) %*% Phi), ncol=nrow(t(Phi) %*% Phi))
  }
  
  b <- invRes %*% t(Phi) %*% as.matrix(X[ ,1])
  
  xCols <- dim(X)[2]
  timeDynamics <- matrix(rep(1:xCols, r), nrow = r, ncol = xCols, byrow = TRUE) * dt
  timeDynamics <- c(b) * (exp(omegaMat %*% timeDynamics))
  
  Xdmd <- Phi %*% timeDynamics
  
  res <- list("dmdResult" = Xdmd,
              "timeDynamics" = timeDynamics,
              "dmdModes" = Phi,
              "dmdAmplitudes" = b,
              "dtEigen" = lambda,
              "ctEigen" = omega)
  
  class(res) <- "dmd"
  
  return(res)
  
}

rp <- colorRampPalette(c("yellow","yellow","yellow","yellow", "yellow", "yellow", "yellow","yellow","yellow","yellow",
                         "red", 
                         "white", "white", 
                         "blue",
                         "lightblue","lightblue","lightblue","lightblue","lightblue","lightblue","lightblue","lightblue","lightblue","lightblue"))

pdf("rawImages.pdf", width = 6, height = 6)
for (i in 1:ncol(dat$VORTALL)){
  xx <- t(matrix(dat$VORTALL[,i], nrow = 199, ncol = 449))
  image(xx, col = rp(500))
}
dev.off()
xx <- t(matrix(dat$VORTALL[,1], nrow = 199, ncol = 449))
rp <- colorRampPalette(c("yellow","red", "white", "blue", "lightblue"))
image(xx, col = rp(500))


library(pracma)

# Generate data
x <- seq(-5, 5, length.out = 128)
t <- seq(0, 4*pi, length.out = 256)

grids <- meshgrid(x, t)

# First periodic function
f1xt <- t(sech(grids$X + 3)*exp(2.3i*grids$Y))

# Second periodic function
f2xt <- t(2*sech(grids$X)*tanh(grids$X)*exp(2.8i*grids$Y))

# Observed values
fxt <- f1xt + f2xt

a <- dmd(fxt, r = 2, dt = 1)

image(Re(a$dmdResult))
image(Re(a$dmdModes)%*%Re(a$timeDynamics))
plot(Re(a$dmdModes[,1]), type = "l")
plot(Re(a$dmdModes[,2]), type = "l")

