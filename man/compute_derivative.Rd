% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_derivative.R
\name{compute_derivative}
\alias{compute_derivative}
\title{Compute derivative using fourth order central difference}
\usage{
compute_derivative(x, dt, r = min(dim(as.matrix(x))))
}
\arguments{
\item{x}{A vector or matrix of measurements over time.}

\item{dt}{A number representing the time between successive measurements.}

\item{r}{A number representing the number of time series in x used to calculate dXdt.}
}
\value{
A vector or matrix of first order derivatives of the variables of interest with respect to time.
}
\description{
Estimates the derivative of a time series using fourth order central difference.
}
\examples{
\donttest{
#Generate Data
library(deSolve)
##Set Lorenz Parameters
parameters <- c(s = 10, r = 28, b = 8/3)
n <- 3
state <- c(X = -8, Y = 8, Z =27) ##Inital Values

#Intergrate
dt <- 0.001
tspan <- seq(dt, 200, dt)
N <- length(tspan)

Lorenz <- function(t, state, parameters) {
 with(as.list(c(state, parameters)), {
   dX <- s * (Y - X)
   dY <- X * (r - Z) - Y
   dZ <- X * Y - b * Z
   list(c(dX, dY, dZ))
 })
}

out <- ode(y = state, times = tspan, func = Lorenz, parms = parameters, rtol = 1e-12, atol = 1e-12)
xdat <- out[, "X"]
dXdt <- compute_derivative(x = xdat, dt = dt)
}
}
