% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/havok.R
\name{havok}
\alias{havok}
\title{Hankel Alternative View of Koopman (HAVOK) Analysis}
\usage{
havok(
  xdat,
  dt = 1,
  stackmax = 100,
  lambda = 0,
  center = TRUE,
  rmax = 15,
  polyOrder = 1,
  useSine = FALSE,
  n = 1
)
}
\arguments{
\item{xdat}{A number.}

\item{dt}{A number.}

\item{stackmax}{A number.}

\item{lambda}{A number.}

\item{center}{A number.}

\item{rmax}{A number.}

\item{polyOrder}{A number.}

\item{useSine}{A number.}

\item{n}{A number.}
}
\value{
A matrix of sparse coefficients
}
\description{
Coefficient determining optimal location of Hard Threshold for Matrix
 Denoising by Singular Values Hard Thresholding when noise level is known or
 unknown.  Recreation of matlab code by Matan Gavish and David Donoho.
}
\examples{
#Generate Data
library(deSolve)
##Set Lorenz Parameters
parameters <- c(s = 10, r = 28, b = 8/3)
n <- 3
state <- c(X = -8, Y = 8, Z =2 7) ##Inital Values

#Intergrate
dt <- 0.001
tspan <- seq(dt, 200, dt)
N <- length(tspan)

Lorenz <- function(t, state, parameters) {
 with(as.list(c(state, parameters)), {
   dX <- s * (Y - X)
   dY <- X * (r - Z) - Y
   dZ <- X * Y - b * Z
   list(c(dX, dY, dZ))
 })
}

out <- ode(y = state, times = tspan, func = Lorenz, parms = parameters, rtol = 1e-12, atol = 1e-12)
xdat <- out[, "X"]
t <- out[, "time"]
hav <- havok(xdat = xdat, dt = dt, stackmax = 100, lambda = 0, rmax = 15, polyOrder = 1, useSine = FALSE, n = 1)
}
